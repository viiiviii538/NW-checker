name: CI (Soft)

on:
  pull_request:
  push:
    branches-ignore: [ main ]

concurrency:
  group: soft-${{ github.ref }}
  cancel-in-progress: true

jobs:
  # Python+Flutter（not fastapi）は codex_run_tests.sh 側でスキップ運用
  ci-soft:
    runs-on: ubuntu-latest
    timeout-minutes: 25
    env:
      PYTHONUTF8: "1"
      SOFT_CL: "1"           # ← ソフトモード（lint/type/coverageは警告扱い）
      PY_MIN_COV: "80"
      FL_MIN_LINE_RATE: "80.0"
    steps:
      - uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          cache: true

      - name: Flutter pub get
        run: |
          if [ -f nw_checker/pubspec.yaml ]; then cd nw_checker && flutter pub get; fi

      - name: Run unified tests (SOFT)
        run: bash codex_run_tests.sh

  # fastapi テストは毎回回すけど、Softは失敗してもブロックしない
  fastapi-soft:
    runs-on: ubuntu-latest
    continue-on-error: true
    timeout-minutes: 20
    env:
      PYTHONUTF8: "1"
    steps:
      - uses: actions/checkout@v4

      - name: Install OS deps
        run: |
          sudo apt-get update
          sudo apt-get install -y nmap

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Run FastAPI tests
        run: pytest -m fastapi -vv
